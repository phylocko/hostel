# Generated by Django 2.1.5 on 2020-10-17 21:32

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import hostel.service.variables


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(max_length=40, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('mid_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('ext_phone', models.CharField(blank=True, max_length=30, null=True)),
                ('birthday', models.DateTimeField(blank=True, default=None, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('kind', models.CharField(choices=[('tech', 'Технический персонал'), ('buh', 'Бухгалтерия'), ('manager', 'Менеджер'), ('project', 'Проект-менеджер')], max_length=20)),
                ('gender', models.CharField(choices=[('male', 'Мужчина'), ('female', 'Женщина')], max_length=20)),
                ('theme', models.CharField(choices=[('bs3', 'BS3')], default='bs3', max_length=20)),
                ('pagination_count', models.PositiveIntegerField(default=50)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('photo', models.ImageField(null=True, upload_to='user_photos')),
                ('last_login', models.DateTimeField(null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
                'ordering': ['id'],
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ArchivedService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.CharField(max_length=20, null=True)),
                ('name', models.CharField(db_column='service', max_length=10)),
                ('params', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Autonomoussystem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('asn', models.IntegerField()),
                ('asset', models.CharField(blank=True, max_length=25)),
                ('aslist', models.CharField(blank=True, max_length=255)),
                ('engname', models.CharField(default='undefined', max_length=255, validators=[hostel.service.variables.validate_netname])),
                ('comment', models.TextField(blank=True, max_length=2048, null=True)),
                ('asset6', models.CharField(blank=True, max_length=25, null=True)),
                ('ticket', models.CharField(max_length=20, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'autonomousSystems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('iface_index', models.IntegerField(null=True)),
                ('is_lag', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, max_length=2048, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'bundles',
                'ordering': ['iface_index'],
            },
        ),
        migrations.CreateModel(
            name='BundleVlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('tagged', 'Tagged'), ('untagged', 'Untagged')], max_length=20)),
                ('comment', models.TextField(blank=True, max_length=2048, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'bundle_vlan',
            },
        ),
        migrations.CreateModel(
            name='BurstSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.IntegerField(blank=True, default=None, null=True)),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('price', models.FloatField(default=0)),
                ('subscription_fee', models.IntegerField(default=0)),
                ('with_tax', models.BooleanField(default=False)),
                ('direction', models.CharField(choices=[('max', 'Превалирующий'), ('in', 'Входящий'), ('out', 'Исходящий')], default='max', max_length=20)),
            ],
            options={
                'db_table': 'burst_sets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('bot_message_id', models.BigIntegerField(null=True)),
            ],
            options={
                'db_table': 'calls',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('map_url', models.URLField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'cities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Datacenter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('address', models.CharField(max_length=255)),
                ('comment', models.CharField(blank=True, max_length=2048, null=True)),
                ('contacts', models.CharField(blank=True, max_length=2048, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'datacentres',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket', models.CharField(max_length=20, null=True)),
                ('type', models.CharField(choices=[('dwdm', 'L1 Лямбда DWDM'), ('fiber', 'L1 Волокно'), ('cross', 'L1 СЛ (Кроссировка на площадке)'), ('l2', 'L2 vlan'), ('evpn', 'L2 EVPN'), ('qinq', 'L2 802.1ad Q-in-Q'), ('pseudowire', 'PseudoWire'), ('l3_inet', 'L3 Интернет'), ('colocation', 'Размещение оборудования'), ('bgp_uplink', 'Аплинк BGP'), ('bgp_resell', 'Перепродажа BGP'), ('maintenance', 'Remote hands'), ('ipmpls', 'IP/MPLS стык'), ('other', 'Другое')], max_length=50)),
                ('identity', models.CharField(max_length=128)),
                ('addresses', models.CharField(blank=True, max_length=256, null=True)),
                ('agreement', models.CharField(blank=True, max_length=128, null=True)),
                ('support_email', models.CharField(blank=True, max_length=255, null=True, validators=[hostel.service.variables.validate_mail_list])),
                ('google_map_url', models.URLField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, max_length=2048, null=True)),
                ('contacts', models.TextField(blank=True, max_length=2048, null=True)),
                ('is_ours', models.BooleanField(default=False)),
                ('is_bought', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'leases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LeaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.CharField(max_length=20, null=True)),
                ('description', models.CharField(max_length=128)),
                ('comment', models.TextField(blank=True, max_length=2048, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lease_groups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ourservice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('tech_type', models.CharField(blank=True, max_length=10, null=True)),
                ('root_net', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'our_services',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True)),
                ('description', models.CharField(max_length=256, null=True)),
                ('count', models.IntegerField(default=0)),
                ('blacklisted', models.BooleanField(default=False)),
                ('spam', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'phones',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('iface_index', models.IntegerField(null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ports',
                'ordering': ['iface_index'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=64, null=True)),
                ('height', models.IntegerField(default=42)),
                ('comment', models.TextField(null=True)),
            ],
            options={
                'db_table': 'racks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.CharField(max_length=20, null=True)),
                ('name', models.CharField(db_column='service', max_length=10)),
                ('status', models.CharField(choices=[('on', 'Включена постоянно'), ('test', 'Тест'), ('off', 'Выключена')], max_length=20)),
                ('comment', models.CharField(blank=True, max_length=2048, null=True)),
                ('servicetype', models.CharField(max_length=25)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('provider_id', models.CharField(blank=True, max_length=2048, null=True)),
                ('commited_bandwidth', models.IntegerField(blank=True, default=None, null=True)),
                ('maximum_bandwidth', models.IntegerField(blank=True, default=None, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'services',
                'ordering': ['-pk'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_id', models.CharField(max_length=20)),
                ('ticket', models.CharField(max_length=20, null=True)),
                ('status', models.CharField(choices=[('on', 'Включена постоянно'), ('test', 'Тест'), ('off', 'Выключена')], max_length=20)),
                ('comment', models.CharField(blank=True, max_length=2048, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('cities', models.ManyToManyField(related_name='subservices', to='common.City')),
                ('leases', models.ManyToManyField(related_name='subservices', to='common.Lease')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subservices', to='common.Service')),
            ],
            options={
                'db_table': 'subservices',
                'ordering': ['-pk'],
                'managed': True,
            },
        ),
    ]
