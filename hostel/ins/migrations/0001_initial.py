# Generated by Django 2.1.5 on 2020-10-17 21:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clients', '0001_initial'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=250)),
                ('type', models.TextField(choices=[('work', 'Работы'), ('failure', 'Авария'), ('other', 'Другое')], default='other')),
                ('closed', models.BooleanField(default=False)),
                ('ticket', models.CharField(max_length=20, null=True)),
                ('time_start', models.DateTimeField()),
                ('time_end', models.DateTimeField()),
                ('outage_period', models.IntegerField(blank=True, null=True)),
                ('fiber', models.CharField(blank=True, max_length=1024, null=True)),
                ('provider_tt', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('report_outage', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('clients', models.ManyToManyField(to='clients.Client')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('leases', models.ManyToManyField(to='common.Lease')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sin', to='clients.Client')),
                ('services', models.ManyToManyField(to='common.Service')),
                ('subservices', models.ManyToManyField(related_name='incidents', to='common.SubService')),
            ],
            options={
                'db_table': 'incidents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.TextField(blank=True, db_column='topic', default='')),
                ('text', models.TextField()),
                ('send_list', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='ins.Incident')),
                ('who_added', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ins_notifications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotificationMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('to', models.CharField(max_length=512, null=True)),
                ('ok', models.BooleanField(default=False)),
                ('error', models.CharField(max_length=1024)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.Client')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ins.Notification')),
            ],
            options={
                'db_table': 'ins_notifications_messages',
                'managed': True,
            },
        ),
    ]
