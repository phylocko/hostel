import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DEBUG = False

AUTH_USER_MODEL = 'common.User'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hostel.devices',
    'hostel.clients',
    'hostel.companies',
    'hostel.vlans',
    'hostel.nets',
    'hostel.ins',
    'hostel.common',
    'hostel.api',
    'hostel.spy',
    'hostel.store',
    'hostel.docs',
    'hostel.search',
    'hostel.tracker',
    'hostel.burst',
    'hostel.path_finder',
    'hostel.templater',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

ROOT_URLCONF = 'hostel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR + '/hostel/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hostel.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'hostel',
        'USER': 'developer',
        'PASSWORD': '0o9i8u',
        'HOST': 'localhost',
        'PORT': '',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Europe/Moscow'
USE_I18N = False
USE_L10N = False
USE_TZ = False


STATIC_URL = '/static/'

# ==========================================================

ALLOWED_HOSTS = [
    '127.0.0.1',
]

STATICFILES_DIRS = []

MEDIA_ROOT = ''

BURST_URL = ''

# RT
RT_URL = 'https://rt.company.org/REST/1.0'
RT_USER = ''
RT_PASS = ''
RT_QUEUE = ''

COLLECTOR_DATA_PATH = '/tmp/collector/data'

ZABBIX_DATA = {
    'url': 'https://zabbix.company.org/',
    'login': '',
    'password': ''
}

# Нежелательные сокращения в адресах, которые нужно ликвидировать при сохранении объекта
STUPID_SHORTS = ['г. ', 'ул. ', 'д. ']

TICKET_URL_PREFIX = 'https://ticket.company.org/browse/'
TICKET_URL_SUFFIX = ''

MRTG_URL = 'https://mrtg.company.org/'

TAX = 0.2  # НДС

ADMIN_EMAIL = ''
EMAIL_FROM = ''

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

LOGIN_URL = "http://127.0.0.1:8000/login/"

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
